Entering to database entertainment
use entertainment

// find all movies which are equal to movie_name
db.movies.find({"movie_name":{$eq:"Brit"}},{movie_name:1,production_year:1,id:0})


//find all movies which are not equal to movie_name
db.movies.find({"movie_name":{$ne:"Brit"}},{movie_name:1,production_year:1,id:0})

//find all movies greater than and greater than equal to a budget


db.movies.find({'budge':{$gte:3}},{movie_name:1,production_year:1,id:0})

//find all movies less than and less than equal to a budget

db.movies.find({'budget':{$lte:3}},{movie_name:1,production_year:1,id:0})


//find all movies that are produced after 2000 with budget greater than 10000

db.movies.find({$and:[{production_year:{$gt:2000}},{budget:{$gt:10000}}]},{movie_name:1,production_year:1,id:0})

//find all movies that are produced after 2000 or budget greater than 10000

db.movies.find({$or:[{production_year:{$gt:2000}},{budget:{$gt:10000}}]},{movie_name:1,production_year:1,id:0})


//find all movies that are neither produced after 2000 nor with budget greater than 10000.

db.movies.find({$nor:[{production_year:{$gt:2000}},{budget:{$gt:10000}}]},{movie_name:1,production_year:1,id:0})

//find all movies that are not produced in 2000 or they do not have budget of 10000

db.movies.find({$nor:[{production_year:{$ne:2000}},{budget:{$ne:10000}}]},{movie_name:1,production_year:1,id:0})

//find all movies that were produced from 2000 to 2010.

db.movies.find({$and:[{production_year:{$gte:2000}},{production_year:{$lte:2000}}]},{movie_name:1,production_year:1,id:0})

//Sort all movies descending based on the production year and if the year is same then alphabetically for their movie_names

db.movies.find().sort({production_year:-1})


//in query 10 skip the first 10 entries and fetch the next 5
db.movies.find().skip(10).limit(5)

